{"ast":null,"code":"var ease = function ease(k) {\n  return 0.5 * (1 - Math.cos(Math.PI * k));\n};\n\nexport var now = function now() {\n  var _window$performance$n, _window$performance, _window$performance$n2;\n\n  return (_window$performance$n = (_window$performance = window.performance) === null || _window$performance === void 0 ? void 0 : (_window$performance$n2 = _window$performance.now) === null || _window$performance$n2 === void 0 ? void 0 : _window$performance$n2.call(_window$performance)) !== null && _window$performance$n !== void 0 ? _window$performance$n : window.Date.now();\n};\nvar DURATION = 500;\nexport var step = function step(context) {\n  var currentTime = now();\n  var elapsed = (currentTime - context.timeStamp) / (context.duration || DURATION);\n\n  if (elapsed > 1) {\n    context.method(context.targetX, context.targetY);\n    context.callback();\n    return;\n  }\n\n  var value = (context.timingFunc || ease)(elapsed);\n  var currentX = context.startX + (context.targetX - context.startX) * value;\n  var currentY = context.startY + (context.targetY - context.startY) * value;\n  context.method(currentX, currentY);\n  context.rafId = window.requestAnimationFrame(function () {\n    step(context);\n  });\n};","map":{"version":3,"sources":["/home/kelvin/Desktop/KelvinPichinini.github.io/kelvin-portifolio/node_modules/seamless-scroll-polyfill/src/scroll-step.ts"],"names":[],"mappings":"AAgBA,IAAM,IAAI,GAAG,SAAP,IAAO,CAAC,CAAD,EAAc;AACvB,SAAO,OAAO,IAAI,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,EAAL,GAAU,CAAnB,CAAX,CAAP;AACH,CAFD;;AAIA,OAAO,IAAM,GAAG,GAAG,SAAN,GAAM;AAAA;;AAAA,yDAAc,MAAM,CAAC,WAArB,kFAAc,oBAAoB,GAAlC,2DAAc,gDAAd,yEAA6C,MAAM,CAAC,IAAP,CAAY,GAAZ,EAA7C;AAAA,CAAZ;AAEP,IAAM,QAAQ,GAAG,GAAjB;AAEA,OAAO,IAAM,IAAI,GAAG,SAAP,IAAO,CAAC,OAAD,EAA4B;AAC5C,MAAM,WAAW,GAAG,GAAG,EAAvB;AAEA,MAAM,OAAO,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC,SAAvB,KAAqC,OAAO,CAAC,QAAR,IAAoB,QAAzD,CAAhB;;AACA,MAAI,OAAO,GAAG,CAAd,EAAiB;AACb,IAAA,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,OAAvB,EAAgC,OAAO,CAAC,OAAxC;AACA,IAAA,OAAO,CAAC,QAAR;AACA;AACH;;AACD,MAAM,KAAK,GAAG,CAAC,OAAO,CAAC,UAAR,IAAsB,IAAvB,EAA6B,OAA7B,CAAd;AAEA,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAR,GAAiB,CAAC,OAAO,CAAC,OAAR,GAAkB,OAAO,CAAC,MAA3B,IAAqC,KAAvE;AACA,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAR,GAAiB,CAAC,OAAO,CAAC,OAAR,GAAkB,OAAO,CAAC,MAA3B,IAAqC,KAAvE;AAEA,EAAA,OAAO,CAAC,MAAR,CAAe,QAAf,EAAyB,QAAzB;AAEA,EAAA,OAAO,CAAC,KAAR,GAAgB,MAAM,CAAC,qBAAP,CAA6B,YAAK;AAC9C,IAAA,IAAI,CAAC,OAAD,CAAJ;AACH,GAFe,CAAhB;AAGH,CAnBM","sourcesContent":["export interface IScrollConfig {\n    readonly duration?: number;\n    readonly timingFunc?: (k: number) => number;\n}\n\nexport interface IContext extends IScrollConfig {\n    readonly timeStamp: number;\n    readonly startX: number;\n    readonly startY: number;\n    readonly targetX: number;\n    readonly targetY: number;\n    readonly method: (x: number, y: number) => void;\n    readonly callback: () => void;\n    rafId: number;\n}\n\nconst ease = (k: number) => {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n};\n\nexport const now = (): number => window.performance?.now?.() ?? window.Date.now();\n\nconst DURATION = 500;\n\nexport const step = (context: IContext): void => {\n    const currentTime = now();\n\n    const elapsed = (currentTime - context.timeStamp) / (context.duration || DURATION);\n    if (elapsed > 1) {\n        context.method(context.targetX, context.targetY);\n        context.callback();\n        return;\n    }\n    const value = (context.timingFunc || ease)(elapsed);\n\n    const currentX = context.startX + (context.targetX - context.startX) * value;\n    const currentY = context.startY + (context.targetY - context.startY) * value;\n\n    context.method(currentX, currentY);\n\n    context.rafId = window.requestAnimationFrame(() => {\n        step(context);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}