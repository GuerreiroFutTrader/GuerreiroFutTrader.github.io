{"ast":null,"code":"import { backupMethod, isObject, isScrollBehaviorSupported, modifyPrototypes } from \"./common.js\";\nimport { elementScrollIntoView } from \"./scrollIntoView.js\";\n\nfunction elementScrollIntoViewBoolean(alignToTop) {\n  elementScrollIntoView(this, {\n    block: (alignToTop !== null && alignToTop !== void 0 ? alignToTop : true) ? \"start\" : \"end\",\n    inline: \"nearest\"\n  });\n}\n\nexport var elementScrollIntoViewPolyfill = function elementScrollIntoViewPolyfill(config) {\n  if (isScrollBehaviorSupported()) {\n    return;\n  }\n\n  var originalFunc = backupMethod(window.HTMLElement.prototype, \"scrollIntoView\", elementScrollIntoViewBoolean);\n  modifyPrototypes(\"scrollIntoView\", function scrollIntoView() {\n    var args = arguments;\n    var options = args[0];\n\n    if (args.length === 1 && isObject(options)) {\n      elementScrollIntoView(this, options, config);\n      return;\n    }\n\n    originalFunc.apply(this, args);\n  });\n};","map":{"version":3,"sources":["/home/kelvin/Desktop/KelvinPichinini.github.io/kelvin-portifolio/node_modules/seamless-scroll-polyfill/src/scrollIntoView.polyfill.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT,EAAuB,QAAvB,EAAiC,yBAAjC,EAA4D,gBAA5D,QAAoF,aAApF;AAEA,SAAS,qBAAT,QAAsC,qBAAtC;;AAEA,SAAS,4BAAT,CAAqD,UAArD,EAAyE;AACrE,EAAA,qBAAqB,CAAC,IAAD,EAAO;AACxB,IAAA,KAAK,EAAE,CAAA,UAAU,SAAV,IAAA,UAAU,WAAV,GAAA,UAAU,GAAI,IAAd,IAAqB,OAArB,GAA+B,KADd;AAExB,IAAA,MAAM,EAAE;AAFgB,GAAP,CAArB;AAIH;;AAED,OAAO,IAAM,6BAA6B,GAAG,SAAhC,6BAAgC,CAAC,MAAD,EAAiC;AAC1E,MAAI,yBAAyB,EAA7B,EAAiC;AAC7B;AACH;;AAED,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,WAAP,CAAmB,SAApB,EAA+B,gBAA/B,EAAiD,4BAAjD,CAAjC;AAEA,EAAA,gBAAgB,CAAC,gBAAD,EAAmB,SAAS,cAAT,GAAuB;AACtD,QAAM,IAAI,GAAG,SAAb;AACA,QAAM,OAAO,GAAG,IAAI,CAAC,CAAD,CAApB;;AAEA,QAAI,IAAI,CAAC,MAAL,KAAgB,CAAhB,IAAqB,QAAQ,CAAC,OAAD,CAAjC,EAA4C;AACxC,MAAA,qBAAqB,CAAC,IAAD,EAAO,OAAP,EAAyC,MAAzC,CAArB;AACA;AACH;;AAED,IAAA,YAAY,CAAC,KAAb,CAAmB,IAAnB,EAAyB,IAAzB;AACH,GAVe,CAAhB;AAWH,CAlBM","sourcesContent":["import { backupMethod, isObject, isScrollBehaviorSupported, modifyPrototypes } from \"./common.js\";\nimport type { IScrollConfig } from \"./scroll-step\";\nimport { elementScrollIntoView } from \"./scrollIntoView.js\";\n\nfunction elementScrollIntoViewBoolean(this: Element, alignToTop?: unknown) {\n    elementScrollIntoView(this, {\n        block: alignToTop ?? true ? \"start\" : \"end\",\n        inline: \"nearest\",\n    });\n}\n\nexport const elementScrollIntoViewPolyfill = (config?: IScrollConfig): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = backupMethod(window.HTMLElement.prototype, \"scrollIntoView\", elementScrollIntoViewBoolean);\n\n    modifyPrototypes(\"scrollIntoView\", function scrollIntoView(this: Element): void {\n        const args = arguments;\n        const options = args[0] as unknown;\n\n        if (args.length === 1 && isObject(options)) {\n            elementScrollIntoView(this, options as ScrollIntoViewOptions, config);\n            return;\n        }\n\n        originalFunc.apply(this, args as never);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}