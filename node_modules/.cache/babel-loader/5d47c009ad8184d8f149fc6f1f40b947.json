{"ast":null,"code":"import { backupMethod, isScrollBehaviorSupported, markPolyfill, modifyPrototypes } from \"./common.js\";\nimport { scroll, scrollBy, scrollTo } from \"./scroll.js\";\n\nconst createPolyfill = (scrollName, patch) => config => {\n  if (isScrollBehaviorSupported()) {\n    return;\n  }\n\n  const scrollMethod = {\n    scroll,\n    scrollTo,\n    scrollBy\n  }[scrollName];\n  patch(scrollName, function () {\n    const args = arguments;\n\n    if (arguments.length === 1) {\n      scrollMethod(this, args[0], config);\n      return;\n    }\n\n    const left = args[0];\n    const top = args[1];\n    scrollMethod(this, {\n      left,\n      top\n    });\n  });\n};\n\nexport const elementScrollPolyfill = /* #__PURE__ */createPolyfill(\"scroll\", modifyPrototypes);\nexport const elementScrollToPolyfill = /* #__PURE__ */createPolyfill(\"scrollTo\", modifyPrototypes);\nexport const elementScrollByPolyfill = /* #__PURE__ */createPolyfill(\"scrollBy\", modifyPrototypes);\nexport const modifyWindow = (prop, func) => {\n  markPolyfill(func);\n  backupMethod(window, prop);\n  window[prop] = func;\n};\nexport const windowScrollPolyfill = /* #__PURE__ */createPolyfill(\"scroll\", modifyWindow);\nexport const windowScrollToPolyfill = /* #__PURE__ */createPolyfill(\"scrollTo\", modifyWindow);\nexport const windowScrollByPolyfill = /* #__PURE__ */createPolyfill(\"scrollBy\", modifyWindow);","map":{"version":3,"sources":["/home/kelvin/Desktop/KelvinPichinini.github.io/kelvin-portifolio/node_modules/seamless-scroll-polyfill/src/scroll.polyfill.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT,EAAuB,yBAAvB,EAAkD,YAAlD,EAAgE,gBAAhE,QAAwF,aAAxF;AAEA,SAAS,MAAT,EAAiB,QAAjB,EAA2B,QAA3B,QAA2C,aAA3C;;AAMA,MAAM,cAAc,GAChB,CAAC,UAAD,EAAyB,KAAzB,KACC,MAAD,IAAiC;AAC7B,MAAI,yBAAyB,EAA7B,EAAiC;AAC7B;AACH;;AAED,QAAM,YAAY,GAAG;AACjB,IAAA,MADiB;AAEjB,IAAA,QAFiB;AAGjB,IAAA;AAHiB,IAInB,UAJmB,CAArB;AAMA,EAAA,KAAK,CAAC,UAAD,EAAa,YAAA;AACd,UAAM,IAAI,GAAG,SAAb;;AACA,QAAI,SAAS,CAAC,MAAV,KAAqB,CAAzB,EAA4B;AACxB,MAAA,YAAY,CAAC,IAAD,EAAO,IAAI,CAAC,CAAD,CAAX,EAAmC,MAAnC,CAAZ;AACA;AACH;;AAED,UAAM,IAAI,GAAG,IAAI,CAAC,CAAD,CAAjB;AACA,UAAM,GAAG,GAAG,IAAI,CAAC,CAAD,CAAhB;AACA,IAAA,YAAY,CAAC,IAAD,EAAO;AAAE,MAAA,IAAF;AAAQ,MAAA;AAAR,KAAP,CAAZ;AACH,GAVI,CAAL;AAWH,CAxBL;;AA0BA,OAAO,MAAM,qBAAqB,GAAG,eAAgB,cAAc,CAAC,QAAD,EAAW,gBAAX,CAA5D;AACP,OAAO,MAAM,uBAAuB,GAAG,eAAgB,cAAc,CAAC,UAAD,EAAa,gBAAb,CAA9D;AACP,OAAO,MAAM,uBAAuB,GAAG,eAAgB,cAAc,CAAC,UAAD,EAAa,gBAAb,CAA9D;AAEP,OAAO,MAAM,YAAY,GAAG,CAA+C,IAA/C,EAAwD,IAAxD,KAAwF;AAChH,EAAA,YAAY,CAAC,IAAD,CAAZ;AACA,EAAA,YAAY,CAAC,MAAD,EAAS,IAAT,CAAZ;AACA,EAAA,MAAM,CAAC,IAAD,CAAN,GAAe,IAAf;AACH,CAJM;AAMP,OAAO,MAAM,oBAAoB,GAAG,eAAgB,cAAc,CAAC,QAAD,EAAW,YAAX,CAA3D;AACP,OAAO,MAAM,sBAAsB,GAAG,eAAgB,cAAc,CAAC,UAAD,EAAa,YAAb,CAA7D;AACP,OAAO,MAAM,sBAAsB,GAAG,eAAgB,cAAc,CAAC,UAAD,EAAa,YAAb,CAA7D","sourcesContent":["import { backupMethod, isScrollBehaviorSupported, markPolyfill, modifyPrototypes } from \"./common.js\";\nimport type { IScrollConfig } from \"./scroll-step\";\nimport { scroll, scrollBy, scrollTo } from \"./scroll.js\";\n\ntype ScrollName = \"scroll\" | \"scrollTo\" | \"scrollBy\";\n\ntype Patch = <T extends ScrollName>(prop: T, func: (Element | typeof window)[T]) => void;\n\nconst createPolyfill =\n    (scrollName: ScrollName, patch: Patch) =>\n    (config?: IScrollConfig): void => {\n        if (isScrollBehaviorSupported()) {\n            return;\n        }\n\n        const scrollMethod = {\n            scroll,\n            scrollTo,\n            scrollBy,\n        }[scrollName];\n\n        patch(scrollName, function (this: Element | typeof window): void {\n            const args = arguments;\n            if (arguments.length === 1) {\n                scrollMethod(this, args[0] as ScrollToOptions, config);\n                return;\n            }\n\n            const left = args[0] as number;\n            const top = args[1] as number;\n            scrollMethod(this, { left, top });\n        });\n    };\n\nexport const elementScrollPolyfill = /* #__PURE__ */ createPolyfill(\"scroll\", modifyPrototypes);\nexport const elementScrollToPolyfill = /* #__PURE__ */ createPolyfill(\"scrollTo\", modifyPrototypes);\nexport const elementScrollByPolyfill = /* #__PURE__ */ createPolyfill(\"scrollBy\", modifyPrototypes);\n\nexport const modifyWindow = <T extends \"scroll\" | \"scrollTo\" | \"scrollBy\">(prop: T, func: typeof window[T]): void => {\n    markPolyfill(func);\n    backupMethod(window, prop);\n    window[prop] = func;\n};\n\nexport const windowScrollPolyfill = /* #__PURE__ */ createPolyfill(\"scroll\", modifyWindow);\nexport const windowScrollToPolyfill = /* #__PURE__ */ createPolyfill(\"scrollTo\", modifyWindow);\nexport const windowScrollByPolyfill = /* #__PURE__ */ createPolyfill(\"scrollBy\", modifyWindow);\n"]},"metadata":{},"sourceType":"module"}